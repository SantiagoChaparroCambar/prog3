///Proyecto dos 

import java.util.Scanner;

public class Matriz {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Obtener dimensiones de la matriz
        System.out.print("Ingrese el número de filas de la matriz: ");
        int fila = scanner.nextInt();
        System.out.print("Ingrese el número de columnas de la matriz: ");
        int column = scanner.nextInt();

        // Crear y llenar la matriz
        int[][] matrix = createMatrix(fila,column, scanner);

        // Ingresar un escalar
        System.out.print("Ingrese un escalar para multiplicar con la matriz: ");
        int escalar = scanner.nextInt();

        // Realizar operaciones
        int[][] sumResult = addMatrices(matrix, createMatrix(fila, column, scanner));
        int[][] productResult = multiplyMatrices(matrix, createMatrix(column, fila, scanner));
        int[][] scalarProductResult = multiplyScalarWithMatrix(escalar, matrix);
        int[][] transposeResult = transposeMatrix(matrix);

        // Imprimir resultados
        System.out.println("Suma de matrices:");
        printMatrix(sumResult);

        System.out.println("Producto de matrices:");
        printMatrix(productResult);

        System.out.println("Producto de escalar con matriz:");
        printMatrix(scalarProductResult);

        System.out.println("Traspuesta de la matriz:");
        printMatrix(transposeResult);

        scanner.close();
    }

 public static int[][] createMatrix(int fila, int column, Scanner scanner) {
        int[][] matrix = new int[fila][column];
        System.out.println("Ingrese los elementos de la matriz:");
        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < column; j++) {
                matrix[i][j] = scanner.nextInt();
            }
        }
        return matrix;
    }

    public static int[][] addMatrices(int[][] matrix1, int[][] matrix2) {
        int fila = matrix1.length;
        int column = matrix1[0].length;
        int[][] result = new int[fila][column];

        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < column; j++) {
                result[i][j] = matrix1[i][j] + matrix2[i][j];
            }
        }

        return result;
    }

    public static int[][] multiplyMatrices(int[][] matrix1, int[][] matrix2) {
        int fila = matrix1.length;
        int column = matrix2[0].length;
        int[][] result = new int[fila][column];

        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < column; j++) {
                int sum = 0;
                for (int k = 0; k < matrix1[0].length; k++) {
                    sum += matrix1[i][k] * matrix2[k][j];
                }
                result[i][j] = sum;
            }
        }

        return result;
    }

    public static int[][] multiplyScalarWithMatrix(int escalar, int[][] matrix) {
        int fila = matrix.length;
        int column = matrix[0].length;
        int[][] result = new int[fila][column];

        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < column; j++) {
                result[i][j] = escalar * matrix[i][j];
            }
        }

        return result;
    }

    public static int[][] transposeMatrix(int[][] matrix) {
        int fila = matrix.length;
        int column = matrix[0].length;
        int[][] result = new int[column][fila];

        for (int i = 0; i < column; i++) {
            for (int j = 0; j <fila; j++) {
                result[i][j] = matrix[j][i];
            }
        }

        return result;
    }

    public static void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}
